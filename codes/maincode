#Here instead of geting alarm on the saperate device we are integrating it with an dashboard using Blynk software.

#include <WiFi.h>
#include <esp_now.h>
#include "BlynkSimpleEsp32.h"

char auth[] = "Your_Blynk_Auth_Token";  // Replace with your Blynk auth
char ssid[] = "Your_SSID";                        // Your WiFi name
char pass[] = "Your_PASSWORD";          // Your WiFi password

// Virtual pin for Blynk dashboard
#define VIRTUAL_WATER_PIN V0

typedef struct struct_message {
  int waterLevel;
} struct_message;

struct_message dataToSend;
uint8_t receiverMAC[] = {0x24, 0x6F, 0x28, 0xAA, 0xBB, 0xCC};  // ESP8266 MAC

void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t status) {
  Serial.print("Send Status: ");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Success" : "Fail");
}

void setup() {
  Serial.begin(115200);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi");

  Blynk.begin(auth, ssid, pass);

  // ESP-NOW Setup
  if (esp_now_init() != ESP_OK) {
    Serial.println("ESP-NOW init failed");
    return;
  }

  esp_now_register_send_cb(OnDataSent);

  esp_now_peer_info_t peerInfo = {};
  memcpy(peerInfo.peer_addr, receiverMAC, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  if (!esp_now_add_peer(&peerInfo)) {
    Serial.println("ESP-NOW peer added.");
  }
}

void loop() {
  Blynk.run();

  // Simulate water level reading (replace with sensor reading)
  dataToSend.waterLevel = random(10, 100);

  // Send via ESP-NOW
  esp_now_send(receiverMAC, (uint8_t *)&dataToSend, sizeof(dataToSend));

  // Send to Blynk
  Blynk.virtualWrite(VIRTUAL_WATER_PIN, dataToSend.waterLevel);
  Serial.println("Water Level Sent to Blynk: " + String(dataToSend.waterLevel));

  delay(3000);
}

